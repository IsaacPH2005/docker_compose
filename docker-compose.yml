# docker-compose.yml
#
# Servicios definidos:
#
# 1. www:
#    - Construye la imagen a partir del Dockerfile en el directorio actual.
#    - Expone los puertos 80 (HTTP) y 443 (HTTPS) del contenedor al host.
#    - Monta el directorio local './public' en '/var/www/html' dentro del contenedor para servir archivos web.
#    - Depende del servicio 'db' para asegurar que la base de datos esté disponible antes de iniciar.
#
# 2. db:
#    - Utiliza la imagen oficial de MariaDB.
#    - Expone el puerto 3306 para conexiones de base de datos.
#    - Configura la base de datos inicial, usuario y contraseñas mediante variables de entorno:
#        * MYSQL_DATABASE: Nombre de la base de datos inicial.
#        * MYSQL_USER / MYSQL_PASSWORD: Usuario y contraseña de la base de datos.
#        * MYSQL_ROOT_PASSWORD: Contraseña del usuario root.
#    - Monta dos volúmenes:
#        * './base_datos' para scripts de inicialización en '/docker-entrypoint-initdb.d'.
#        * './mysql-data' para persistencia de datos en '/var/lib/mysql'.
#
# 3. phpmyadmin:
#    - Utiliza la imagen oficial de phpMyAdmin.
#    - Depende del servicio 'db' para asegurar la conexión a la base de datos.
#    - Expone el puerto 8080 del host al puerto 80 del contenedor para acceso web a phpMyAdmin.
#    - Configura las credenciales de acceso a la base de datos mediante variables de entorno.
services:
  www:
    build: .
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public:/var/www/html
    depends_on:
      - db
  db:
    image: mariadb:latest
    expose:
      - "3306"
    environment:
      MYSQL_DATABASE: db_example_1
      MYSQL_USER: user1
      MYSQL_PASSWORD: user1pass  
      MYSQL_ROOT_PASSWORD: rootpass
    volumes:
      - ./base_datos:/docker-entrypoint-initdb.d
      - ./mysql-data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin
    depends_on:
      - db
    ports:
      - "8080:80"
    environment:
      MYSQL_USER: user1
      MYSQL_PASSWORD: user1pass
      MYSQL_ROOT_PASSWORD: rootpass
      